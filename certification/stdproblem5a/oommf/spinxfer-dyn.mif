# MIF 2.1
#
# Sample MIF file based on simulations in manuscript
#
#  "Excitations of Incoherent Spin-Waves due to Spin-Transfer Torque,"
#  K.J. Lee, A. Deac, O. Redon, J.P. Nozieres and B. Dieny.
#
set pi [expr 4*atan(1.0)]
set mu0 [expr 4*$pi*1e-7]

set basename spinxfer

Parameter COMPUTE_INITIAL_M 0

Parameter total_current -0.004 ;# Current in amps

# Specify contact: if circle_contact is 1, then current flows through
# centered circular region of indicated diameter.  If circle_contact
# is 0, then circle_diameter is ignored, and current flows through
# entire elliptical shape.
Parameter circle_contact 0

set circle_diameter 50e-9   ;# in meters.  If you change this, then
## adjustments must also be made to the Oersted field.

Parameter Happ 0.0 ;# Field in kOe
set Happ [expr {$Happ*1e6/(4*$pi)}]  ;# Convert to A/m

Parameter Happ_angle 180.  ;# Direction of applied field, in degrees
set Happ_angle [expr {$Happ_angle*$pi/180.}]

Parameter Ms 1420e3
Parameter A    20e-12

Parameter Polarization  0.5669

Parameter Lambda 1.0

Parameter mp_theta 1.0 ;# Direction of mp, in degrees
set mp_theta [expr {$mp_theta*$pi/180.}]

set length 129.6e-9
set width   72.0e-9
set thick    3.0e-9

set Nx 64
set Ny 64
set Nz 1

Specify Oxs_BoxAtlas:atlas [subst {
  xrange {0 $length}
  yrange {0 $width}
  zrange {0 $thick}
}]

;# Compute cross-sectional area of current flow
if {$circle_contact} {
  set current_area [expr {$pi*$circle_diameter*$circle_diameter/4.}]
} else {
  set current_area [expr {$length*$width}]
}
set current_density [expr {$total_current/$current_area}]

set xcellsize [expr {$length/$Nx}]
set ycellsize [expr {$width/$Ny}]
set zcellsize [expr {$thick/$Nz}]

Specify Oxs_RectangularMesh:mesh [subst {
  cellsize {$xcellsize $ycellsize $zcellsize}
  atlas :atlas
}]

# Exchange
Specify Oxs_UniformExchange [subst {
  A   $A
}]

# Demag
Specify Oxs_Demag {}

# Applied field
Specify Oxs_FixedZeeman:Happ [subst {
    field {[expr {cos($Happ_angle)}] [expr {sin($Happ_angle)}] 0.0}
    multiplier $Happ
}]

if {!$COMPUTE_INITIAL_M} {

if {$circle_contact} {
   # Evolver
   Specify Oxs_SpinXferEvolve:evolve [subst {
     alpha 0.014
     start_dm 0.01
     mp {[expr {cos($mp_theta)}] [expr {sin($mp_theta)}] 0}
     J { Oxs_ScriptScalarField {
         atlas :atlas
         script {Circle $current_density \
                     [expr {$circle_diameter*$circle_diameter/4.0}]}
         script_args {relpt span}
     }}
     P $Polarization
     Lambda $Lambda
   }]


} else {
   # Evolver
   Specify Oxs_SpinXferEvolve:evolve [subst {
     alpha 0.014
     start_dm 0.01
     mp {[expr {cos($mp_theta)}] [expr {sin($mp_theta)}] 0}
     J { Oxs_ScriptScalarField {
       atlas :atlas
       script {Ellipse $current_density}
     }}
     P $Polarization
     Lambda $Lambda
   }]

}


# Driver
Specify Oxs_TimeDriver [subst {
 basename [list $basename]
 evolver :evolve
 stopping_time 1e-12
 stage_count 7000
 mesh :mesh
 Ms { Oxs_ScriptScalarField {
    atlas :atlas
    script {Ellipse $Ms}
 } }

 m0 { Oxs_FileVectorField {
    atlas :atlas
    file [list ${basename}-start.omf]
    norm 1.0
 }}

}]

} else {

Specify Oxs_CGEvolve:evolve {}

Specify Oxs_MinDriver [subst {
 evolver :evolve
 stopping_mxHxm 1e-3
 mesh :mesh
 Ms { Oxs_ScriptScalarField {
    atlas :atlas
    script {Ellipse $Ms}
 } }
 m0 { Oxs_ScriptVectorField {
    atlas :atlas
    script C_State
    norm 1.0
 }}
}]

}

proc Ellipse { Ms x y z } {
    set xrad [expr {2.*$x - 1.}]
    set yrad [expr {2.*$y - 1.}]
    set test [expr {$xrad*$xrad+$yrad*$yrad}]
    if {$test>1.0} {return $Ms}
    return $Ms
}

proc Circle { J radsq rx ry rz xspan yspan zspan} {
    set xoff [expr {($rx - 0.5)*$xspan}]    
    set yoff [expr {($ry - 0.5)*$yspan}]
    if {$xoff*$xoff+$yoff*$yoff>$radsq} {return 0.0}
    return $J
}

proc C_State { x y z } {
    if {$x<0.25} { return [list 0.  -1.  -0.1] }
    if {$x>0.75} { return [list 0.  -1.  -0.1] }
    return [list 1. 0. 0.]
}

Destination archive mmArchive
Schedule Oxs_TimeDriver::Magnetization archive Stage 1



